import { type NextPage } from "next";
import Head from "next/head";
import { NightShelterRounded } from "@mui/icons-material";
import Link from "next/link";
import type { ClientSafeProvider, LiteralUnion } from "next-auth/react";
import { getCsrfToken, getProviders, signIn } from "next-auth/react";
import type { CtxOrReq } from "next-auth/client/_utils";
import type { BuiltInProviderType } from "next-auth/providers";

type Props = {
  csrfToken: string | undefined;
  providers: Record<
    LiteralUnion<BuiltInProviderType, string>,
    ClientSafeProvider
  > | null;
};

const Home: NextPage = ({ providers }: Props) => {
  return (
    <>
      <Head>
        <title>Nightlite</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-muted text-inverted">
        <div className="container m-8 flex max-w-xl flex-col items-center justify-center gap-6 rounded-md bg-foreground px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-inverted sm:text-[5rem] ">
            <NightShelterRounded className="text-primary" fontSize="inherit" />
            Nightlite
          </h1>
          {providers &&
            Object.values(providers).map((provider) => (
              <div key={provider.name} style={{ marginBottom: 0 }}>
                <button
                  className="rounded border-2 border-inverted py-2 px-3"
                  onClick={() => signIn(provider.id)}
                >
                  Sign in with {provider.name}
                </button>
              </div>
            ))}{" "}
          <div className="divider text-center">or</div>
          <Link
            className="rounded border-2 border-inverted py-2 px-3"
            href="/todo"
          >
            Continue As Guest
          </Link>
        </div>
      </main>
    </>
  );
};

export default Home;

export async function getServerSideProps(context: CtxOrReq | undefined) {
  const providers = await getProviders();
  const csrfToken = await getCsrfToken(context);
  return {
    props: {
      providers,
      csrfToken,
    },
  };
}
