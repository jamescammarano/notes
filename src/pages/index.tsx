import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import {
  Google,
  NightShelterRounded,
  Facebook,
  Apple,
} from "@mui/icons-material";
import { api } from "../utils/api";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Nightlite</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-muted text-inverted">
        <div className="container m-8 flex max-w-xl flex-col items-center justify-center gap-6 rounded-md bg-gray-dark px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-inverted sm:text-[5rem] ">
            <NightShelterRounded className="text-primary" fontSize="inherit" />
            Nightlite
          </h1>
          <div className="grid grid-flow-col grid-cols-2 ">
            <button className="border-b-2 border-primary px-2 text-center text-lg">
              Sign In
            </button>
            <button className="px-2 text-center text-lg">Sign Up</button>
          </div>
          ``
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
          <div>
            <div className="text-center">or</div>
            <div>
              <div className="cursor-pointer">
                <button>
                  <Google /> Sign in with Google
                </button>
              </div>
              <div>
                <button>
                  <Facebook /> Sign in with Facebook
                </button>
              </div>
              <div>
                <button>
                  <Apple /> Sign in with Apple
                </button>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-inverted">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-primary px-10 py-3 font-semibold text-inverted no-underline transition hover:bg-primary/70"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
